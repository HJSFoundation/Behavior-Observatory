DISCLAIMER: 

Behavior Observatory is a behavior observation application for school psychologists and special educators. It's intended to be used within a Functional Behavior Analysis framework, and the reports generated by the software should not be included in a student's IEP file or CUM file unless the observation was performed by a certified teacher or psychologist who has been trained in FBA. 

********************************************************************************************************

ABOUT THE APPLICATION: 

The original purpose of this application was to be an event timer for performing Time on Task observations, which is an observation where the observer times and records when a student is on task or off task. It occured to the developer that this observation would be far more accurate and useful if it were done with the aid of a computer. 

A TOT observation timer needs to time two different event types: on-task and off-task. The time.py script records these events in two lists and writes them to a text file. When the script closes, it writes the contents of the two lists (on-task, off-task) to a .csv file. 

A later addition was the ability to record notes, done so at the suggestion of a friend. The notes written by the observer are grabbed from the text area every time the observer records a change in the state of the subject (when the student moves from off-task to on-task or vice/versa) 

********************************************************************************************************

April 7th, 2012

There are new additions to the app being explored in the Observation-Deluxe.wxg file. 

The next most important functionalities to add: 

1.Event Counters (as seen already in the .wxg file) 

2.Some kind of ABC (Antecedent=>Behavior=>Consequence) observation protocol. 
    *Revision April 11th: Upon further thought, I think things will probably get too complicated if I 
    add an ABC tool as well. I will branch this to another separate application so I don't end up with a
    an unholy mess. 

The app as written in time.py has been distributed as an .exe all over the school building I work in. I'm eliciting feedback from my coworkers. The idea for event counters came from watching a teacher try to put tally marks inside of the notes textctrl. 

*********************************************************************************************************
 
April 10th, 2012 

Added observatory.py, which is the first draft of the wx code merged with the actual functioning code. Right now it's just the task timer, debugged and optimized for the linux environment. Programming the additions textctrl and buttons is the next task. First I'll have to figure out how I want the .txt file to look when everything is done. 

I figured out why files were saving to the next directory higher with a \ in the title. It's because I had the string set up for Windows, since the file dialog was originally put there for windows users. I have since reversed it and everything works fine. I will need to remember to reverse it again when I port.  

*********************************************************************************************************

April 12th, 2012

Made all the buttons functional. I added a lot of if statements to make so events don't show up in the final report unless they were actually recordes as happening. That way parents won't ask irrelevant questions at IEP meetings. 

*********************************************************************************************************

April 15th, 2012

Made the UI for the task timer operate from two different buttons instead of one. Got rid of the ambiguous grey zone between events. Split the main timer function into two separate functions bound to each button as well as the - and = keys on the keyboard using and accelerator table. Used SetFocus() on the off-task on-task buttons so that the enter key acts as a toggle if left on the buttons. Used a little trickery to make so that hitting the same accelerator key twice in a row can't cause that same function to iterate again. The same timing function should NEVER run sequentially. 

*********************************************************************************************************

April 16th, 2012

Tested the app in the classroom today. Definite learning curve to using it correctly. I'll need to practice and maybe consult with a psych on the best events to include for the repetitive events. 

********************************************************************************************************* 
